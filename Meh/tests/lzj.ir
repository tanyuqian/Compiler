func random {
	%random.0.enter:
		$t33 = move $g8(seed)
		$t34 = move $g5(M)
		jump %random.1.entry

	%random.1.entry:
		$t26 = rem $t33 $g6(Q)
		$t27 = mul $g4(A) $t26
		$t28 = div $t33 $g6(Q)
		$t29 = mul $g7(R) $t28
		$t30 = sub $t27 $t29
		$t9 = move $t30
		$t31 = sge $t9 0
		br $t31 %random.2.if_true %random.3.if_false

	%random.2.if_true:
		$t33 = move $t9
		jump %random.4.if_merge

	%random.4.if_merge:
		ret $t33
		jump %random.5.exit

	%random.3.if_false:
		$t32 = add $t9 $t34
		$t33 = move $t32
		jump %random.4.if_merge

	%random.5.exit:
		$g8(seed) = move $t33
		$g5(M) = move $t34
}
void initialize $p10 {
	%initialize.0.enter:
		jump %initialize.1.entry

	%initialize.1.entry:
		$g8(seed) = move $p10
		jump %initialize.2.exit

	%initialize.2.exit:
}
void swap $p11 $p12 {
	%swap.0.enter:
		jump %swap.1.entry

	%swap.1.entry:
		$t36 = mul $p11 4
		$t35 = add $g3(a) $t36
		$t37 = load 4 $t35 0
		$t13 = move $t37
		$t41 = mul $p12 4
		$t40 = add $g3(a) $t41
		$t42 = load 4 $t40 0
		store 4 $t35 $t42 0
		store 4 $t40 $t13 0
		jump %swap.2.exit

	%swap.2.exit:
}
func pd $p14 {
	%pd.0.enter:
		$t50 = move $g1(h)
		$t51 = move $p14
		jump %pd.1.entry

	%pd.1.entry:
		$t50 = move $t50
		jump %pd.2.for_condition

	%pd.2.for_condition:
		$t45 = sle $t50 $t51
		br $t45 %pd.3.for_body %pd.8.for_merge

	%pd.3.for_body:
		$t46 = add $t50 1
		$t47 = mul $t50 $t46
		$t48 = div $t47 2
		$t49 = seq $t51 $t48
		br $t49 %pd.4.if_true %pd.7.for_loop

	%pd.4.if_true:
		ret 1
		jump %pd.9.exit

	%pd.7.for_loop:
		$t50 = add $t50 1
		jump %pd.2.for_condition

	%pd.8.for_merge:
		ret 0
		jump %pd.9.exit

	%pd.9.exit:
		$g1(h) = move $t50
}
void show {
	%show.0.enter:
		$t58 = move $g2(now)
		$t59 = move $g3(a)
		jump %show.1.entry

	%show.1.entry:
		$t15 = move 0
		jump %show.2.for_condition

	%show.2.for_condition:
		$t52 = slt $t15 $t58
		br $t52 %show.4.for_loop %show.5.for_merge

	%show.4.for_loop:
		$t54 = mul $t15 4
		$t53 = add $t59 $t54
		$t55 = load 4 $t53 0
		call ____builtin____print_int $t55
		call ____builtin____print $56
		$t15 = add $t15 1
		jump %show.2.for_condition

	%show.5.for_merge:
		call ____builtin____println $57
		jump %show.6.exit

	%show.6.exit:
		$g2(now) = move $t58
		$g3(a) = move $t59
}
func win {
	%win.0.enter:
		$t96 = move $g2(now)
		$t97 = move $g3(a)
		jump %win.1.entry

	%win.1.entry:
		$t60 = alloc 404
		store 4 $t60 100 0
		$t60 = add $t60 4
		$t18 = move $t60
		$t62 = sne $t96 $g1(h)
		br $t62 %win.2.if_true %win.4.if_merge

	%win.2.if_true:
		ret 0
		jump %win.27.exit

	%win.4.if_merge:
		$t17 = move 0
		jump %win.5.for_condition

	%win.5.for_condition:
		$t63 = slt $t17 $t96
		br $t63 %win.7.for_loop %win.8.for_merge

	%win.7.for_loop:
		$t65 = mul $t17 4
		$t64 = add $t18 $t65
		$t66 = add $t97 $t65
		$t68 = load 4 $t66 0
		store 4 $t64 $t68 0
		$t17 = add $t17 1
		jump %win.5.for_condition

	%win.8.for_merge:
		$t16 = move 0
		jump %win.9.for_condition

	%win.9.for_condition:
		$t69 = sub $t96 1
		$t70 = slt $t16 $t69
		br $t70 %win.10.for_body %win.19.for_merge

	%win.10.for_body:
		$t71 = add $t16 1
		$t17 = move $t71
		jump %win.11.for_condition

	%win.11.for_condition:
		$t72 = slt $t17 $t96
		br $t72 %win.12.for_body %win.18.for_loop

	%win.12.for_body:
		$t74 = mul $t16 4
		$t73 = add $t18 $t74
		$t75 = load 4 $t73 0
		$t77 = mul $t17 4
		$t76 = add $t18 $t77
		$t78 = load 4 $t76 0
		$t79 = sgt $t75 $t78
		br $t79 %win.15.if_merge %win.16.for_loop

	%win.15.if_merge:
		$t81 = mul $t16 4
		$t80 = add $t18 $t81
		$t82 = load 4 $t80 0
		$t19 = move $t82
		$t86 = mul $t17 4
		$t85 = add $t18 $t86
		$t87 = load 4 $t85 0
		store 4 $t80 $t87 0
		store 4 $t85 $t19 0
		jump %win.16.for_loop

	%win.16.for_loop:
		$t17 = add $t17 1
		jump %win.11.for_condition

	%win.18.for_loop:
		$t16 = add $t16 1
		jump %win.9.for_condition

	%win.19.for_merge:
		$t16 = move 0
		jump %win.20.for_condition

	%win.20.for_condition:
		$t90 = slt $t16 $t96
		br $t90 %win.21.for_body %win.26.for_merge

	%win.21.for_body:
		$t92 = mul $t16 4
		$t91 = add $t18 $t92
		$t93 = load 4 $t91 0
		$t94 = add $t16 1
		$t95 = sne $t93 $t94
		br $t95 %win.22.if_true %win.25.for_loop

	%win.22.if_true:
		ret 0
		jump %win.27.exit

	%win.25.for_loop:
		$t16 = add $t16 1
		jump %win.20.for_condition

	%win.26.for_merge:
		ret 1
		jump %win.27.exit

	%win.27.exit:
		$g2(now) = move $t96
		$g3(a) = move $t97
}
void merge {
	%merge.0.enter:
		jump %merge.1.entry

	%merge.1.entry:
		$g2(now) = move $g2(now)
		$g4(A) = move $g4(A)
		$g3(a) = move $g3(a)
		$g7(R) = move $g7(R)
		$g6(Q) = move $g6(Q)
		$g1(h) = move $g1(h)
		$g8(seed) = move $g8(seed)
		$g0(n) = move $g0(n)
		$t20 = move 0
		$g5(M) = move $g5(M)
		jump %merge.2.for_condition

	%merge.2.for_condition:
		$t98 = slt $t20 $g2(now)
		br $t98 %merge.3.for_body %merge.15.for_merge

	%merge.3.for_body:
		$t100 = mul $t20 4
		$t99 = add $g3(a) $t100
		$t101 = load 4 $t99 0
		$t102 = seq $t101 0
		br $t102 %merge.4.if_true %merge.14.for_loop

	%merge.4.if_true:
		$t103 = add $t20 1
		$t21 = move $t103
		jump %merge.5.for_condition

	%merge.5.for_condition:
		$t104 = slt $t21 $g2(now)
		br $t104 %merge.6.for_body %merge.14.for_loop

	%merge.6.for_body:
		$t106 = mul $t21 4
		$t105 = add $g3(a) $t106
		$t107 = load 4 $t105 0
		$t108 = sne $t107 0
		br $t108 %merge.13.if_merge %merge.10.for_loop

	%merge.13.if_merge:
		call swap $t20 $t21
		jump %merge.14.for_loop

	%merge.14.for_loop:
		$t20 = add $t20 1
		jump %merge.2.for_condition

	%merge.10.for_loop:
		$t21 = add $t21 1
		jump %merge.5.for_condition

	%merge.15.for_merge:
		$t20 = move 0
		jump %merge.16.for_condition

	%merge.16.for_condition:
		$t109 = slt $t20 $g2(now)
		br $t109 %merge.17.for_body %merge.23.exit

	%merge.17.for_body:
		$t111 = mul $t20 4
		$t110 = add $g3(a) $t111
		$t112 = load 4 $t110 0
		$t113 = seq $t112 0
		br $t113 %merge.22.for_merge %merge.21.for_loop

	%merge.22.for_merge:
		$g2(now) = move $t20
		jump %merge.23.exit

	%merge.21.for_loop:
		$t20 = add $t20 1
		jump %merge.16.for_condition

	%merge.23.exit:
}
void move {
	%move.0.enter:
		$t122 = move $g2(now)
		$t123 = move $g3(a)
		jump %move.1.entry

	%move.1.entry:
		$t22 = move 0
		jump %move.2.for_condition

	%move.2.for_condition:
		$t114 = slt $t22 $t122
		br $t114 %move.4.for_loop %move.5.for_merge

	%move.4.for_loop:
		$t116 = mul $t22 4
		$t115 = add $t123 $t116
		$t117 = load 4 $t115 0
		$t117 = sub $t117 1
		store 4 $t115 $t117 0
		$t118 = add $t22 1
		$t22 = move $t118
		jump %move.2.for_condition

	%move.5.for_merge:
		$t120 = mul $t122 4
		$t119 = add $t123 $t120
		store 4 $t119 $t122 0
		$t122 = add $t122 1
		jump %move.6.exit

	%move.6.exit:
		$g2(now) = move $t122
		$g3(a) = move $t123
}
func main {
	%main.0.enter:
		$g4(A) = move 48271
		$g5(M) = move 2147483647
		$g8(seed) = move 1
		jump %main.1.entry

	%main.1.entry:
		$g0(n) = move 210
		$g1(h) = move 0
		$t124 = alloc 404
		store 4 $t124 100 0
		$t124 = add $t124 4
		$g3(a) = move $t124
		$t126 = div $g5(M) $g4(A)
		$g6(Q) = move $t126
		$t127 = rem $g5(M) $g4(A)
		$g7(R) = move $t127
		$t128 = call pd $g0(n)
		$t129 = xor $t128 1
		br $t129 %main.2.if_true %main.4.if_merge

	%main.2.if_true:
		call ____builtin____println $130
		ret 1
		jump %main.12.exit

	%main.4.if_merge:
		call ____builtin____println $131
		call initialize 3654898
		$t132 = call random
		$t133 = rem $t132 10
		$t134 = add $t133 1
		$g2(now) = move $t134
		$t135 = call ____builtin____to_string $g2(now)
		call ____builtin____println $t135
		$t24 = move 0
		$t23 = move 0
		jump %main.5.for_condition

	%main.5.for_condition:
		$t136 = sub $g2(now) 1
		$t137 = slt $t23 $t136
		br $t137 %main.6.for_body %main.11.for_merge

	%main.6.for_body:
		$t139 = mul $t23 4
		$t138 = add $g3(a) $t139
		$t140 = call random
		$t141 = rem $t140 10
		$t142 = add $t141 1
		store 4 $t138 $t142 0
		$t143 = call ____builtin____to_string $t24
		call ____builtin____println $t143
		jump %main.7.while_loop

	%main.7.while_loop:
		$t145 = mul $t23 4
		$t144 = add $g3(a) $t145
		$t146 = load 4 $t144 0
		$t147 = add $t146 $t24
		$t148 = sgt $t147 $g0(n)
		br $t148 %main.8.while_body %main.10.for_loop

	%main.8.while_body:
		$t150 = mul $t23 4
		$t149 = add $g3(a) $t150
		$t151 = call random
		$t152 = rem $t151 10
		$t153 = add $t152 1
		store 4 $t149 $t153 0
		jump %main.7.while_loop

	%main.10.for_loop:
		$t155 = mul $t23 4
		$t154 = add $g3(a) $t155
		$t156 = load 4 $t154 0
		$t157 = add $t24 $t156
		$t24 = move $t157
		$t23 = add $t23 1
		jump %main.5.for_condition

	%main.11.for_merge:
		$t158 = sub $g2(now) 1
		$t160 = mul $t158 4
		$t159 = add $g3(a) $t160
		$t161 = sub $g0(n) $t24
		store 4 $t159 $t161 0
		ret 0
		jump %main.12.exit

	%main.12.exit:
}
